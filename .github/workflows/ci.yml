name: CI (handoff + validation + lint)

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dev deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          pip install black ruff mypy pytest PyYAML

      - name: Lint (ruff) & format check (black)
        run: |
          ruff check .
          black --check .

      - name: Type check (mypy)
        run: mypy .

      - name: Unit tests (pytest)
        run: |
          mkdir -p test-artifacts
          pytest -q --maxfail=1 --disable-warnings 2>&1 | tee test-artifacts/pytest.log
        continue-on-error: false

      - name: Validate handoff.yml (required keys)
        run: |
          python - <<'PY'
          import sys, yaml, pathlib
          p = pathlib.Path("handoff/handoff.yml")
          if not p.exists():
              print("handoff/handoff.yml not found; if intentional, skip or create a stub.")
              sys.exit(1)
          req = {"owner","status","artifacts","outputs_expected","acceptance_criteria","next_action"}
          data = yaml.safe_load(p.read_text(encoding="utf-8"))
          if not isinstance(data, dict):
              print("handoff.yml must be a mapping"); sys.exit(1)
          missing = sorted(req - set(data))
          if missing:
              print("Missing keys:", ", ".join(missing)); sys.exit(1)
          print("handoff.yml OK")
          PY

      - name: Schema smoke test (validator + minimal example)
        run: |
          python -m src.validate_canonical tests/samples/minimal_valid.json --verbose

      - name: Upload test logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-artifacts
          path: test-artifacts/
